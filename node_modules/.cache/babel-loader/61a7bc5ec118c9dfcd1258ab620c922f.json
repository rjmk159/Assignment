{"ast":null,"code":"import _objectSpread from \"/Users/rajajunaid/Desktop/react-assignment/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/rajajunaid/Desktop/react-assignment/src/components/PlaceType.js\";\nimport React, { Component } from 'react';\nimport noImage from '../no_preview.jpg';\nimport { connect } from 'react-redux';\n\nclass PlaceType extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      types: ['accounting', 'airport', 'amusement_park', 'aquarium', 'art_gallery', 'atm', 'bakery', 'bank', 'bar', 'beauty_salon', 'bicycle_store', 'book_store', 'bowling_alley', 'bus_station', 'cafe', 'campground', 'car_dealer', 'car_rental', 'car_repair', 'car_wash', 'casino', 'cemetery', 'church', 'city_hall', 'clothing_store', 'convenience_store', 'courthouse', 'dentist', 'department_store', 'doctor', 'electrician', 'electronics_store', 'embassy', 'fire_station', 'florist', 'funeral_home', 'furniture_store', 'gas_station', 'gym', 'hair_care', 'hardware_store', 'hindu_temple', 'home_goods_store', 'hospital', 'insurance_agency', 'jewelry_store', 'laundry', 'lawyer', 'library', 'liquor_store', 'local_government_office', 'locksmith', 'lodging', 'mel_delivery', 'meal_takeaway', 'mosque', 'movie_rental', 'movie_theater', 'moving_company', 'museum', 'night_club', 'painter', 'park', 'parking', 'pet_store', 'pharmacy', 'physiotherapist', 'plumber', 'police', 'post_office', 'real_estate_agency', 'restaurant', 'roofing_contractor', 'rv_park', 'school', 'shoe_store', 'shopping_mall', 'spa', 'stadium', 'storage', 'store', 'subway_station', 'synagogue', 'taxi_stand', 'train_station', 'transit_station', 'travel_agency', 'university', 'veterinary_care', 'zoo'],\n      initialTypes: ['accounting', 'airport', 'amusement_park', 'aquarium', 'art_gallery', 'atm', 'bakery', 'bank', 'bar', 'beauty_salon', 'bicycle_store', 'book_store', 'bowling_alley', 'bus_station', 'cafe', 'campground', 'car_dealer', 'car_rental', 'car_repair', 'car_wash', 'casino', 'cemetery', 'church', 'city_hall', 'clothing_store', 'convenience_store', 'courthouse', 'dentist', 'department_store', 'doctor', 'electrician', 'electronics_store', 'embassy', 'fire_station', 'florist', 'funeral_home', 'furniture_store', 'gas_station', 'gym', 'hair_care', 'hardware_store', 'hindu_temple', 'home_goods_store', 'hospital', 'insurance_agency', 'jewelry_store', 'laundry', 'lawyer', 'library', 'liquor_store', 'local_government_office', 'locksmith', 'lodging', 'mel_delivery', 'meal_takeaway', 'mosque', 'movie_rental', 'movie_theater', 'moving_company', 'museum', 'night_club', 'painter', 'park', 'parking', 'pet_store', 'pharmacy', 'physiotherapist', 'plumber', 'police', 'post_office', 'real_estate_agency', 'restaurant', 'roofing_contractor', 'rv_park', 'school', 'shoe_store', 'shopping_mall', 'spa', 'stadium', 'storage', 'store', 'subway_station', 'synagogue', 'taxi_stand', 'train_station', 'transit_station', 'travel_agency', 'university', 'veterinary_care', 'zoo'],\n      selectedList: []\n    };\n\n    this.newRegExp = val => {\n      return new RegExp(`${val}`, \"i\");\n    };\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.value;\n      let _type = this.state.selectedList;\n\n      if (_type.includes(name)) {\n        let index = _type.indexOf(name);\n\n        _type.splice(index, 1);\n      } else {\n        _type.push(name);\n      }\n\n      this.setState({\n        selectedList: _type\n      }, () => {\n        this.props.selectedPlace(_type);\n      });\n    };\n\n    this.handleFindString = e => {\n      let _value = e.target.value;\n      _value = _value.toLowerCase();\n      this.setState({\n        value: _value\n      });\n\n      if (_value === \"\") {\n        this.setState({\n          types: this.state.initialTypes\n        });\n        return;\n      }\n\n      const regex = new RegExp(_value);\n      let newTypes = this.state.types.filter(element => regex.test(element, _value));\n      this.setState({\n        types: newTypes\n      });\n    };\n  }\n\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  render() {\n    let types = this.state.types;\n    return React.createElement(\"div\", {\n      className: \"types--container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"types--searchbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Place\",\n      onChange: e => this.handleFindString(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Near me\")), types.map((item, index) => {\n      item = item.replace(/_/g, \" \");\n      return React.createElement(\"label\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"types\",\n        value: item,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), this.capitalizeFirstLetter(item));\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => _objectSpread({}, state);\n\nexport default connect(mapStateToProps, {})(PlaceType);","map":{"version":3,"sources":["/Users/rajajunaid/Desktop/react-assignment/src/components/PlaceType.js"],"names":["React","Component","noImage","connect","PlaceType","state","types","initialTypes","selectedList","newRegExp","val","RegExp","handleInputChange","event","target","value","type","checked","name","_type","includes","index","indexOf","splice","push","setState","props","selectedPlace","handleFindString","e","_value","toLowerCase","regex","newTypes","filter","element","test","capitalizeFirstLetter","string","charAt","toUpperCase","slice","render","map","item","replace","mapStateToProps"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport noImage from '../no_preview.jpg'\nimport { connect } from 'react-redux';\n\nclass PlaceType extends Component {\n  state = {\n    types : ['accounting','airport','amusement_park','aquarium','art_gallery','atm','bakery','bank','bar','beauty_salon','bicycle_store','book_store','bowling_alley','bus_station','cafe','campground','car_dealer','car_rental','car_repair','car_wash','casino','cemetery','church','city_hall','clothing_store','convenience_store','courthouse','dentist','department_store','doctor','electrician','electronics_store','embassy','fire_station','florist','funeral_home','furniture_store','gas_station','gym','hair_care','hardware_store','hindu_temple','home_goods_store','hospital','insurance_agency','jewelry_store','laundry','lawyer','library','liquor_store','local_government_office','locksmith','lodging','mel_delivery','meal_takeaway','mosque','movie_rental','movie_theater','moving_company','museum','night_club','painter','park','parking','pet_store','pharmacy','physiotherapist','plumber','police','post_office','real_estate_agency','restaurant','roofing_contractor','rv_park','school','shoe_store','shopping_mall','spa','stadium','storage','store','subway_station','synagogue','taxi_stand','train_station','transit_station','travel_agency','university','veterinary_care','zoo'],\n    initialTypes :  ['accounting','airport','amusement_park','aquarium','art_gallery','atm','bakery','bank','bar','beauty_salon','bicycle_store','book_store','bowling_alley','bus_station','cafe','campground','car_dealer','car_rental','car_repair','car_wash','casino','cemetery','church','city_hall','clothing_store','convenience_store','courthouse','dentist','department_store','doctor','electrician','electronics_store','embassy','fire_station','florist','funeral_home','furniture_store','gas_station','gym','hair_care','hardware_store','hindu_temple','home_goods_store','hospital','insurance_agency','jewelry_store','laundry','lawyer','library','liquor_store','local_government_office','locksmith','lodging','mel_delivery','meal_takeaway','mosque','movie_rental','movie_theater','moving_company','museum','night_club','painter','park','parking','pet_store','pharmacy','physiotherapist','plumber','police','post_office','real_estate_agency','restaurant','roofing_contractor','rv_park','school','shoe_store','shopping_mall','spa','stadium','storage','store','subway_station','synagogue','taxi_stand','train_station','transit_station','travel_agency','university','veterinary_care','zoo'],\n    selectedList:[],\n  }\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  \n  newRegExp = val => {\n    return new RegExp(`${val}`, \"i\");\n  };\n\n  handleInputChange=(event)=> {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.value;\n    let _type = this.state.selectedList;\n    if(_type.includes(name)){\n      let index = _type.indexOf(name);\n      _type.splice(index,1);\n    } else {\n      _type.push(name);\n    }\n    this.setState({\n      selectedList: _type\n    },()=>{\n      this.props.selectedPlace(_type);\n    });\n  }\n\n  handleFindString = e => {\n    let _value = e.target.value;\n    _value = _value.toLowerCase();\n    this.setState({ value: _value });\n    if (_value === \"\") {\n      this.setState({ types: this.state.initialTypes });\n      return;\n    }\n    const regex = new RegExp(_value);\n    let newTypes = this.state.types.filter(element =>\n      regex.test(element, _value)\n    );\n    this.setState({ types: newTypes });\n  };\n  render(){\n    let {types} = this.state\n    return(\n      <div  className=\"types--container\">\n        <div className=\"types--searchbox\">\n          <input type=\"text\" placeholder=\"Place\"  onChange={e => this.handleFindString(e)}/>\n            <span>Near me</span>\n        </div>\n        {types.map((item,index)=>{\n         item = item.replace(/_/g, \" \");\n          return(\n            <label key={index}>\n              <input type=\"checkbox\" className=\"types\" value={item} onChange={this.handleInputChange} />{this.capitalizeFirstLetter(item)}\n            </label>\n          );\n        })}\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state\n });\n \n export default connect(mapStateToProps, { })(PlaceType);\n"]},"metadata":{},"sourceType":"module"}