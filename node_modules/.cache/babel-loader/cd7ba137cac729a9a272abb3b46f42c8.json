{"ast":null,"code":"var _jsxFileName = \"/Users/rajajunaid/Desktop/react-assignment/src/components/Map.js\";\nimport React, { Component } from 'react';\nimport { InfoWindow, Marker } from 'google-maps-react';\nimport MapContainer from '../container/MapContainer';\nimport InfoComponent from '../components/InfoComponent';\nimport pin from '../pin.png';\nexport class Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      list: []\n    };\n\n    this.onMarkerClick = (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.setLocation = list => {\n      this.setState({\n        list: list\n      });\n      this.props.setLocations(list);\n    };\n  }\n\n  render() {\n    console.log(\"this.state\", this.state);\n    return React.createElement(MapContainer, {\n      centerAroundCurrentLocation: this.props.centerAroundCurrentLocation,\n      google: this.props.google,\n      setLocations: list => {\n        this.setLocation(list);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.state.list && this.state.list.length > 0 ? this.state.list.map((item, index) => {\n      return React.createElement(Marker, {\n        key: index,\n        icon: pin,\n        position: {\n          lat: item.geometry.location.lat(),\n          lng: item.geometry.location.lng()\n        },\n        onClick: this.onMarkerClick,\n        name: item.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }) : '', React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(InfoComponent, {\n      details: this.state.selectedPlace,\n      list: this.state.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default Map;","map":{"version":3,"sources":["/Users/rajajunaid/Desktop/react-assignment/src/components/Map.js"],"names":["React","Component","InfoWindow","Marker","MapContainer","InfoComponent","pin","Map","state","showingInfoWindow","activeMarker","selectedPlace","list","onMarkerClick","props","marker","e","setState","onClose","setLocation","setLocations","render","console","log","centerAroundCurrentLocation","google","length","map","item","index","lat","geometry","location","lng","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { InfoWindow, Marker } from 'google-maps-react';\nimport MapContainer from '../container/MapContainer';\nimport InfoComponent from '../components/InfoComponent'\nimport pin from '../pin.png'\n\nexport class Map extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {},\n    list :[],\n  };\n  onMarkerClick = (props, marker, e) =>{\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n  });\n  }\n   \n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  setLocation=(list)=>{\n    this.setState({list:list});\n    this.props.setLocations(list)\n  }\n  render() {\n    console.log(\"this.state\",this.state)\n    return (\n      <MapContainer centerAroundCurrentLocation={this.props.centerAroundCurrentLocation} google={this.props.google} setLocations={(list)=>{this.setLocation(list)}}>\n        {this.state.list && this.state.list.length>0 ?(\n          this.state.list.map((item,index)=>{\n            return (<Marker key={index} icon={pin} position={{lat: item.geometry.location.lat(), lng: item.geometry.location.lng()}} onClick={this.onMarkerClick} name={item.name} /> )\n          })\n        ):''}\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n         <InfoComponent details={this.state.selectedPlace} list={this.state.list}/>\n        </InfoWindow>\n      </MapContainer>\n    );\n  }\n}\n\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}