{"ast":null,"code":"var _jsxFileName = \"/Users/rajajunaid/Desktop/react-assignment/src/Home.js\";\nimport React, { Component } from \"react\";\nimport AppContainer from \"./container/AppContainer\";\nimport Map from \"./components/Map\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport PlaceType from \"./components/PlaceType\";\nimport List from \"./container/ListContainer\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: []\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(AppContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(PlaceType, {\n      selectedPlace: type => {\n        this.setState({\n          selectedPlace: type\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Map, {\n      centerAroundCurrentLocation: true,\n      google: this.props.google,\n      selectedPlace: this.state.selectedPlace,\n      setLocations: list => this.setState({\n        list\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(List, {\n      list: this.state.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_MAP_KEY\n})(App);","map":{"version":3,"sources":["/Users/rajajunaid/Desktop/react-assignment/src/Home.js"],"names":["React","Component","AppContainer","Map","store","Provider","PlaceType","List","GoogleApiWrapper","App","state","list","onMarkerClick","props","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","render","type","google","apiKey","process","env","REACT_APP_MAP_KEY"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AAEA,SAASC,gBAAT,QAAiC,mBAAjC;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BS,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE;AADA,KADkB;;AAAA,SAI1BC,aAJ0B,GAIV,CAACC,KAAD,EAAQC,MAAR,EAAgBC,CAAhB,KACd,KAAKC,QAAL,CAAc;AACZC,MAAAA,aAAa,EAAEJ,KADH;AAEZK,MAAAA,YAAY,EAAEJ,MAFF;AAGZK,MAAAA,iBAAiB,EAAE;AAHP,KAAd,CALwB;;AAAA,SAW1BC,OAX0B,GAWhBP,KAAK,IAAI;AACjB,UAAI,KAAKH,KAAL,CAAWS,iBAAf,EAAkC;AAChC,aAAKH,QAAL,CAAc;AACZG,UAAAA,iBAAiB,EAAE,KADP;AAEZD,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KAlByB;AAAA;;AAmB1BG,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEjB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,aAAa,EAAEkB,IAAI,IAAI;AACrB,aAAKN,QAAL,CAAc;AAAEC,UAAAA,aAAa,EAAEK;AAAjB,SAAd;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,GAAD;AACE,MAAA,2BAA2B,MAD7B;AAEE,MAAA,MAAM,EAAE,KAAKT,KAAL,CAAWU,MAFrB;AAGE,MAAA,aAAa,EAAE,KAAKb,KAAL,CAAWO,aAH5B;AAIE,MAAA,YAAY,EAAEN,IAAI,IAAI,KAAKK,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAYE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF,CADF;AAkBD;;AAtCyB;;AAwC5B,eAAeH,gBAAgB,CAAC;AAC9BgB,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADU,CAAD,CAAhB,CAEZlB,GAFY,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport AppContainer from \"./container/AppContainer\";\nimport Map from \"./components/Map\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport PlaceType from \"./components/PlaceType\";\nimport List from \"./container/ListContainer\";\n\nimport { GoogleApiWrapper } from \"google-maps-react\";\n\nclass App extends Component {\n  state = {\n    list: []\n  };\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  render() {\n    return (\n      <Provider store={store}>\n        <AppContainer>\n          <PlaceType\n            selectedPlace={type => {\n              this.setState({ selectedPlace: type });\n            }}\n          />\n          <Map\n            centerAroundCurrentLocation\n            google={this.props.google}\n            selectedPlace={this.state.selectedPlace}\n            setLocations={list => this.setState({ list })}\n          />\n          <List list={this.state.list} />\n        </AppContainer>\n      </Provider>\n    );\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_MAP_KEY\n})(App);\n"]},"metadata":{},"sourceType":"module"}