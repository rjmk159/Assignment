{"ast":null,"code":"var _jsxFileName = \"/Users/rajajunaid/Desktop/react-assignment/src/components/Map.js\";\nimport React, { Component } from \"react\";\nimport { InfoWindow, Marker } from \"google-maps-react\";\nimport MapContainer from \"../container/MapContainer\";\nimport InfoComponent from \"../components/InfoComponent\";\nimport pin from \"../assets/images/pin.png\";\nexport class Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      list: []\n    };\n\n    this.onMarkerClick = (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.setLocation = list => {\n      this.setState({\n        list: list\n      });\n      this.props.setLocations(list);\n    };\n  }\n\n  render() {\n    return React.createElement(MapContainer, {\n      centerAroundCurrentLocation: this.props.centerAroundCurrentLocation,\n      google: this.props.google // setLocations={list => {\n      //   this.setLocation(list);\n      // }}\n      ,\n      selectedPlace: this.props.selectedPlace,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.list && this.state.list.length > 0 ? this.state.list.map((item, index) => {\n      return React.createElement(Marker, {\n        key: index,\n        icon: pin,\n        position: {\n          lat: item.geometry.location.lat(),\n          lng: item.geometry.location.lng()\n        },\n        onClick: this.onMarkerClick,\n        name: item.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    }) : \"\", React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(InfoComponent, {\n      details: this.state.selectedPlace,\n      list: this.state.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default Map;","map":{"version":3,"sources":["/Users/rajajunaid/Desktop/react-assignment/src/components/Map.js"],"names":["React","Component","InfoWindow","Marker","MapContainer","InfoComponent","pin","Map","state","showingInfoWindow","activeMarker","selectedPlace","list","onMarkerClick","props","marker","e","setState","onClose","setLocation","setLocations","render","centerAroundCurrentLocation","google","length","map","item","index","lat","geometry","location","lng","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,mBAAnC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AAEA,OAAO,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCO,KADiC,GACzB;AACNC,MAAAA,iBAAiB,EAAE,KADb;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,aAAa,EAAE,EAHT;AAINC,MAAAA,IAAI,EAAE;AAJA,KADyB;;AAAA,SAQjCC,aARiC,GAQjB,CAACC,KAAD,EAAQC,MAAR,EAAgBC,CAAhB,KAAsB;AACpC,WAAKC,QAAL,CAAc;AACZN,QAAAA,aAAa,EAAEG,KADH;AAEZJ,QAAAA,YAAY,EAAEK,MAFF;AAGZN,QAAAA,iBAAiB,EAAE;AAHP,OAAd;AAKD,KAdgC;;AAAA,SAgBjCS,OAhBiC,GAgBvBJ,KAAK,IAAI;AACjB,UAAI,KAAKN,KAAL,CAAWC,iBAAf,EAAkC;AAChC,aAAKQ,QAAL,CAAc;AACZR,UAAAA,iBAAiB,EAAE,KADP;AAEZC,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KAvBgC;;AAAA,SAwBjCS,WAxBiC,GAwBnBP,IAAI,IAAI;AACpB,WAAKK,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAEA;AAAR,OAAd;AACA,WAAKE,KAAL,CAAWM,YAAX,CAAwBR,IAAxB;AACD,KA3BgC;AAAA;;AA4BjCS,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,YAAD;AACE,MAAA,2BAA2B,EAAE,KAAKP,KAAL,CAAWQ,2BAD1C;AAEE,MAAA,MAAM,EAAE,KAAKR,KAAL,CAAWS,MAFrB,CAGE;AACA;AACA;AALF;AAME,MAAA,aAAa,EAAE,KAAKT,KAAL,CAAWH,aAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQG,KAAKH,KAAL,CAAWI,IAAX,IAAmB,KAAKJ,KAAL,CAAWI,IAAX,CAAgBY,MAAhB,GAAyB,CAA5C,GACG,KAAKhB,KAAL,CAAWI,IAAX,CAAgBa,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnC,aACE,oBAAC,MAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,IAAI,EAAErB,GAFR;AAGE,QAAA,QAAQ,EAAE;AACRsB,UAAAA,GAAG,EAAEF,IAAI,CAACG,QAAL,CAAcC,QAAd,CAAuBF,GAAvB,EADG;AAERG,UAAAA,GAAG,EAAEL,IAAI,CAACG,QAAL,CAAcC,QAAd,CAAuBC,GAAvB;AAFG,SAHZ;AAOE,QAAA,OAAO,EAAE,KAAKlB,aAPhB;AAQE,QAAA,IAAI,EAAEa,IAAI,CAACM,IARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAYD,KAbD,CADH,GAeG,EAvBN,EAwBE,oBAAC,UAAD;AACE,MAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWE,YADrB;AAEE,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,iBAFtB;AAGE,MAAA,OAAO,EAAE,KAAKS,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,aAAD;AACE,MAAA,OAAO,EAAE,KAAKV,KAAL,CAAWG,aADtB;AAEE,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,IAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAxBF,CADF;AAqCD;;AAlEgC;AAqEnC,eAAeL,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { InfoWindow, Marker } from \"google-maps-react\";\nimport MapContainer from \"../container/MapContainer\";\nimport InfoComponent from \"../components/InfoComponent\";\nimport pin from \"../assets/images/pin.png\";\n\nexport class Map extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {},\n    list: []\n  };\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  };\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  setLocation = list => {\n    this.setState({ list: list });\n    this.props.setLocations(list);\n  };\n  render() {\n    return (\n      <MapContainer\n        centerAroundCurrentLocation={this.props.centerAroundCurrentLocation}\n        google={this.props.google}\n        // setLocations={list => {\n        //   this.setLocation(list);\n        // }}\n        selectedPlace={this.props.selectedPlace}\n      >\n        {this.state.list && this.state.list.length > 0\n          ? this.state.list.map((item, index) => {\n              return (\n                <Marker\n                  key={index}\n                  icon={pin}\n                  position={{\n                    lat: item.geometry.location.lat(),\n                    lng: item.geometry.location.lng()\n                  }}\n                  onClick={this.onMarkerClick}\n                  name={item.name}\n                />\n              );\n            })\n          : \"\"}\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <InfoComponent\n            details={this.state.selectedPlace}\n            list={this.state.list}\n          />\n        </InfoWindow>\n      </MapContainer>\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}