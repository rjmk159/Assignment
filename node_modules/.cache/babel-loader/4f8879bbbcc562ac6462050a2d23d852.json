{"ast":null,"code":"import _objectSpread from \"/Users/rajajunaid/Desktop/react-assignment/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/rajajunaid/Desktop/react-assignment/src/Home.js\";\nimport React, { Component } from 'react';\nimport AppContainer from './container/AppContainer';\nimport Map from './components/Map';\nimport { connect } from 'react-redux';\nimport { getFeedDetails, addHistory, deleteHistory } from './redux/actions';\nimport PlaceType from './components/PlaceType';\nimport List from './container/ListContainer';\nimport { GoogleApiWrapper } from 'google-maps-react';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: []\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(AppContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(PlaceType, {\n      selectedPlace: type => {\n        this.setState({\n          selectedPlace: type\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Map, {\n      centerAroundCurrentLocation: true,\n      google: this.props.google,\n      selectedPlace: this.state.selectedPlace,\n      setLocations: list => this.setState({\n        list\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(List, {\n      list: this.state.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => _objectSpread({}, state);\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCdWkEeqRMNnTrlSmKnCo1WFY7xo6-nKw8'\n})(connect(mapStateToProps, {})(App));","map":{"version":3,"sources":["/Users/rajajunaid/Desktop/react-assignment/src/Home.js"],"names":["React","Component","AppContainer","Map","connect","getFeedDetails","addHistory","deleteHistory","PlaceType","List","GoogleApiWrapper","App","state","list","onMarkerClick","props","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","render","type","google","mapStateToProps","apiKey"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,cAAR,EAAuBC,UAAvB,EAAkCC,aAAlC,QAAsD,iBAAtD;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AAEA,SAASC,gBAAT,QAAiC,mBAAjC;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BW,KAD0B,GACpB;AACJC,MAAAA,IAAI,EAAC;AADD,KADoB;;AAAA,SAI1BC,aAJ0B,GAIV,CAACC,KAAD,EAAQC,MAAR,EAAgBC,CAAhB,KAChB,KAAKC,QAAL,CAAc;AACZC,MAAAA,aAAa,EAAEJ,KADH;AAEZK,MAAAA,YAAY,EAAEJ,MAFF;AAGZK,MAAAA,iBAAiB,EAAE;AAHP,KAAd,CAL0B;;AAAA,SAW5BC,OAX4B,GAWlBP,KAAK,IAAI;AACjB,UAAI,KAAKH,KAAL,CAAWS,iBAAf,EAAkC;AAChC,aAAKH,QAAL,CAAc;AACZG,UAAAA,iBAAiB,EAAE,KADP;AAEZD,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KAlB2B;AAAA;;AAmB1BG,EAAAA,MAAM,GAAE;AAER,WACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,aAAa,EAAGC,IAAD,IAAQ;AAAC,aAAKN,QAAL,CAAc;AAACC,UAAAA,aAAa,EAACK;AAAf,SAAd;AAAoC,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,GAAD;AACE,MAAA,2BAA2B,MAD7B;AAEE,MAAA,MAAM,EAAE,KAAKT,KAAL,CAAWU,MAFrB;AAGE,MAAA,aAAa,EAAK,KAAKb,KAAL,CAAWO,aAH/B;AAIE,MAAA,YAAY,EAAIN,IAAD,IAAQ,KAAKK,QAAL,CAAc;AAACL,QAAAA;AAAD,OAAd,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAOE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAI,KAAKD,KAAL,CAAWC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAWC;;AAhCyB;;AAkC5B,MAAMa,eAAe,GAAGd,KAAK,sBACxBA,KADwB,CAA7B;;AAGA,eAAeF,gBAAgB,CAAC;AAC9BiB,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZvB,OAAO,CAACsB,eAAD,EAAkB,EAAlB,CAAP,CAA8Bf,GAA9B,CAFY,CAAf","sourcesContent":["import React,{Component} from 'react';\nimport AppContainer from './container/AppContainer';\nimport Map from './components/Map';\nimport { connect } from 'react-redux';\nimport {getFeedDetails,addHistory,deleteHistory} from './redux/actions';\nimport PlaceType from './components/PlaceType';\nimport List from './container/ListContainer';\n\nimport { GoogleApiWrapper } from 'google-maps-react';\n\nclass App extends Component {\n  state={\n    list:[]\n  }\n  onMarkerClick = (props, marker, e) =>\n  this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true\n  });\n\nonClose = props => {\n  if (this.state.showingInfoWindow) {\n    this.setState({\n      showingInfoWindow: false,\n      activeMarker: null\n    });\n  }\n};\n  render(){\n\n  return (\n    <AppContainer>  \n      <PlaceType selectedPlace={(type)=>{this.setState({selectedPlace:type})}} />\n      <Map \n        centerAroundCurrentLocation\n        google={this.props.google} \n        selectedPlace = { this.state.selectedPlace }\n        setLocations ={(list)=>this.setState({list})}/>\n      <List list = {this.state.list}/>\n    </AppContainer>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  ...state\n });\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCdWkEeqRMNnTrlSmKnCo1WFY7xo6-nKw8'\n})(connect(mapStateToProps, { })(App));\n\n "]},"metadata":{},"sourceType":"module"}