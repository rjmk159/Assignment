{"ast":null,"code":"import _objectSpread from \"/Users/rajajunaid/Desktop/react-assignment/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/rajajunaid/Desktop/react-assignment/src/container/MapContainer.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { MapContainerStyle } from \"../assets/styles/Map.style\";\nimport { strings } from '../utils/strings';\nimport { connect } from \"react-redux\";\nconst mapStyles = {\n  map: {\n    width: \"100%\",\n    height: \"100vh\"\n  }\n};\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setNearByLocation = () => {\n      this.loadMap();\n      this.map.fitBounds(bounds);\n      let currentLocation = this.state.currentLocation;\n      console.log(this.props.selectedPlace);\n      let request = {\n        location: currentLocation,\n        types: this.props.selectedPlace || [\"ATM\"],\n        radius: 5000\n      };\n\n      if (this.props && this.props.google) {\n        const google = this.props.google;\n        let bounds = new google.maps.LatLngBounds();\n        let service = new google.maps.places.PlacesService(this.map);\n        service.nearbySearch(request, this.callback);\n      }\n    };\n\n    this.callback = (request, status) => {\n      this.props.setLocations(request);\n    };\n\n    const _this$props$initialCe = this.props.initialCenter,\n          lat = _this$props$initialCe.lat,\n          lng = _this$props$initialCe.lng;\n    this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.centerAroundCurrentLocation) {\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const coords = pos.coords;\n          this.setState({\n            currentLocation: {\n              lat: coords.latitude,\n              lng: coords.longitude\n            }\n          });\n        });\n      }\n    }\n\n    this.loadMap();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n\n    if (prevState.currentLocation !== this.state.currentLocation) {\n      this.recenterMap();\n    }\n  }\n\n  loadMap() {\n    if (this.props && this.props.google) {\n      const google = this.props.google;\n      const currentLocation = this.state.currentLocation;\n      const maps = google.maps;\n      const mapRef = this.refs.map;\n      const node = ReactDOM.findDOMNode(mapRef);\n      let zoom = this.props.zoom;\n      const lat = currentLocation.lat,\n            lng = currentLocation.lng;\n      const center = new maps.LatLng(lat, lng);\n      this.setState({\n        center\n      });\n      const mapConfig = Object.assign({}, {\n        center: center,\n        zoom: zoom\n      });\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n\n  recenterMap() {\n    const map = this.map;\n    const currentLocation = this.state.currentLocation;\n    const current = currentLocation;\n    const google = this.props.google;\n    const maps = google.maps;\n\n    if (map) {\n      let center = new maps.LatLng(current.lat, current.lng);\n      map.panTo(center);\n    }\n  }\n\n  renderChildren() {\n    const children = this.props.children;\n    const currentLocation = this.state.currentLocation;\n    if (!children) return;\n    return React.Children.map(children, c => {\n      if (!c) return;\n      return React.cloneElement(c, {\n        map: this.map,\n        google: this.props.google,\n        mapCenter: currentLocation\n      });\n    });\n  }\n\n  render() {\n    const style = Object.assign({}, mapStyles.map);\n    return React.createElement(MapContainerStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: style,\n      ref: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"map-loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Loading map...\")), this.renderChildren(), React.createElement(\"div\", {\n      className: \"search-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.setNearByLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, strings.SearchCtaText)));\n  }\n\n}\n\nconst mapStateToProps = state => _objectSpread({}, state);\n\nexport default connect(mapStateToProps, {})(Map);\nMap.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: 19.1700576,\n    lng: 72.8602116\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};","map":{"version":3,"sources":["/Users/rajajunaid/Desktop/react-assignment/src/container/MapContainer.js"],"names":["React","Component","ReactDOM","MapContainerStyle","strings","connect","mapStyles","map","width","height","Map","constructor","props","setNearByLocation","loadMap","fitBounds","bounds","currentLocation","state","console","log","selectedPlace","request","location","types","radius","google","maps","LatLngBounds","service","places","PlacesService","nearbySearch","callback","status","setLocations","initialCenter","lat","lng","componentDidMount","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","setState","latitude","longitude","componentDidUpdate","prevProps","prevState","recenterMap","mapRef","refs","node","findDOMNode","zoom","center","LatLng","mapConfig","Object","assign","current","panTo","renderChildren","children","Children","c","cloneElement","mapCenter","render","style","SearchCtaText","mapStateToProps","defaultProps","visible"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { MapContainerStyle } from \"../assets/styles/Map.style\";\nimport { strings } from '../utils/strings';\nimport { connect } from \"react-redux\";\n\nconst mapStyles = {\n  map: {\n    width: \"100%\",\n    height: \"100vh\"\n  }\n};\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    const { lat, lng } = this.props.initialCenter;\n    this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.centerAroundCurrentLocation) {\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const coords = pos.coords;\n          this.setState({\n            currentLocation: {\n              lat: coords.latitude,\n              lng: coords.longitude\n            }\n          });\n        });\n      }\n    }\n    this.loadMap();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n    if (prevState.currentLocation !== this.state.currentLocation) {\n      this.recenterMap();\n    }\n  }\n  loadMap() {\n    if (this.props && this.props.google) {\n      const { google } = this.props;\n      const { currentLocation } = this.state;\n      const maps = google.maps;\n      const mapRef = this.refs.map;\n      const node = ReactDOM.findDOMNode(mapRef);\n      let { zoom } = this.props;\n      const { lat, lng } = currentLocation;\n      const center = new maps.LatLng(lat, lng);\n      this.setState({ center });\n      const mapConfig = Object.assign(\n        {},\n        {\n          center: center,\n          zoom: zoom\n        }\n      );\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n  recenterMap() {\n    const map = this.map;\n    const { currentLocation } = this.state;\n    const current = currentLocation;\n    const google = this.props.google;\n    const maps = google.maps;\n    if (map) {\n      let center = new maps.LatLng(current.lat, current.lng);\n      map.panTo(center);\n    }\n  }\n  renderChildren() {\n    const { children } = this.props;\n    const { currentLocation } = this.state;\n    if (!children) return;\n    return React.Children.map(children, c => {\n      if (!c) return;\n      return React.cloneElement(c, {\n        map: this.map,\n        google: this.props.google,\n        mapCenter: currentLocation\n      });\n    });\n  }\n  setNearByLocation = () => {\n \n    this.loadMap();\n    this.map.fitBounds(bounds);\n    let {currentLocation} = this.state;\n    console.log(this.props.selectedPlace)\n    let request = {\n      location: currentLocation,\n      types: this.props.selectedPlace || [\"ATM\"],\n      radius: 5000\n    };\n    if (this.props && this.props.google) {\n      const { google } = this.props;\n      let bounds = new google.maps.LatLngBounds();\n      let service = new google.maps.places.PlacesService(this.map);\n      service.nearbySearch(request, this.callback);\n    }\n  };\n  callback = (request, status) => {\n   \n    this.props.setLocations(request);\n  };\n  render() {\n    const style = Object.assign({}, mapStyles.map);\n    return (\n      <MapContainerStyle>\n        <div style={style} ref=\"map\">\n          <div className=\"map-loader\">\n              Loading map...\n          </div>\n\n        </div>\n        {this.renderChildren()}\n        <div className=\"search-container\">\n          <button onClick={this.setNearByLocation}>{strings.SearchCtaText}</button>\n        </div>\n      </MapContainerStyle>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nexport default connect(mapStateToProps, { })(Map);\n\nMap.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: 19.1700576,\n    lng: 72.8602116\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};\n"]},"metadata":{},"sourceType":"module"}