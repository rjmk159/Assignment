{"ast":null,"code":"var _jsxFileName = \"/Users/rajajunaid/Desktop/react-assignment/src/components/Map.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { MapContainer } from './styles/Map.style';\nimport { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nconst mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '100%',\n    height: '300px'\n  }\n};\n\nclass Map extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.setNearByLocation = () => {\n      let request = {\n        location: this.state.currentLocation,\n        types: [\"atm\"],\n        radius: 5000\n      };\n\n      if (this.props && this.props.google) {\n        const google = this.props.google;\n        console.log('this.map', this.map);\n        let service = new google.maps.places.PlacesService(this.map);\n        service.nearbySearch(request, this.callback);\n      }\n    };\n\n    this.callback = (request, status) => {\n      this.props.setLocations(request);\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    const _this$props$initialCe = this.props.initialCenter,\n          lat = _this$props$initialCe.lat,\n          lng = _this$props$initialCe.lng;\n    this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      },\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      list: [],\n      types: ['accounting', 'airport', 'amusement_park', 'aquarium', 'art_gallery', 'atm', 'bakery', 'bank', 'bar', 'beauty_salon', 'bicycle_store', 'book_store', 'bowling_alley', 'bus_station', 'cafe', 'campground', 'car_dealer', 'car_rental', 'car_repair', 'car_wash', 'casino', 'cemetery', 'church', 'city_hall', 'clothing_store', 'convenience_store', 'courthouse', 'dentist', 'department_store', 'doctor', 'electrician', 'electronics_store', 'embassy', 'fire_station', 'florist', 'funeral_home', 'furniture_store', 'gas_station', 'gym', 'hair_care', 'hardware_store', 'hindu_temple', 'home_goods_store', 'hospital', 'insurance_agency', 'jewelry_store', 'laundry', 'lawyer', 'library', 'liquor_store', 'local_government_office', 'locksmith', 'lodging', 'mel_delivery', 'meal_takeaway', 'mosque', 'movie_rental', 'movie_theater', 'moving_company', 'museum', 'night_club', 'painter', 'park', 'parking', 'pet_store', 'pharmacy', 'physiotherapist', 'plumber', 'police', 'post_office', 'real_estate_agency', 'restaurant', 'roofing_contractor', 'rv_park', 'school', 'shoe_store', 'shopping_mall', 'spa', 'stadium', 'storage', 'store', 'subway_station', 'synagogue', 'taxi_stand', 'train_station', 'transit_station', 'travel_agency', 'university', 'veterinary_care', 'zoo']\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.centerAroundCurrentLocation) {\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const coords = pos.coords;\n          console.log('current Location', coords.latitude, coords.longitude);\n          this.setState({\n            currentLocation: {\n              lat: coords.latitude,\n              lng: coords.longitude\n            }\n          });\n        });\n      }\n    }\n\n    this.loadMap();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n\n    if (prevState.currentLocation !== this.state.currentLocation) {\n      this.recenterMap();\n    }\n  }\n\n  loadMap() {\n    if (this.props && this.props.google) {\n      // checks if google is available\n      const google = this.props.google;\n      const maps = google.maps;\n      const mapRef = this.refs.map; // reference to the actual DOM element\n\n      const node = ReactDOM.findDOMNode(mapRef);\n      let zoom = this.props.zoom;\n      const _this$state$currentLo = this.state.currentLocation,\n            lat = _this$state$currentLo.lat,\n            lng = _this$state$currentLo.lng;\n      const center = new maps.LatLng(lat, lng);\n      this.setState({\n        center\n      });\n      const mapConfig = Object.assign({}, {\n        center: center,\n        zoom: zoom\n      }); // maps.Map() is constructor that instantiates the map\n\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n\n  recenterMap() {\n    const map = this.map;\n    const current = this.state.currentLocation;\n    const google = this.props.google;\n    const maps = google.maps;\n\n    if (map) {\n      let center = new maps.LatLng(current.lat, current.lng);\n      map.panTo(center);\n    }\n  }\n\n  renderChildren() {\n    const children = this.props.children;\n    if (!children) return;\n    return React.Children.map(children, c => {\n      if (!c) return;\n      return React.cloneElement(c, {\n        map: this.map,\n        google: this.props.google,\n        mapCenter: this.state.currentLocation\n      });\n    });\n  }\n\n  render() {\n    const style = Object.assign({}, mapStyles.map);\n    return React.createElement(MapContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: style,\n      ref: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Loading map...\"), this.renderChildren(), React.createElement(\"button\", {\n      style: {\n        position: 'absolute'\n      },\n      onClick: this.setNearByLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"JUNAID\"));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCdWkEeqRMNnTrlSmKnCo1WFY7xo6-nKw8'\n})(Map);\nMap.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: 9.1700576,\n    lng: 72.8602116\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};","map":{"version":3,"sources":["/Users/rajajunaid/Desktop/react-assignment/src/components/Map.js"],"names":["React","Component","ReactDOM","MapContainer","GoogleApiWrapper","InfoWindow","Marker","mapStyles","map","position","width","height","Map","constructor","props","setNearByLocation","request","location","state","currentLocation","types","radius","google","console","log","service","maps","places","PlacesService","nearbySearch","callback","status","setLocations","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","initialCenter","lat","lng","list","componentDidMount","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","loadMap","componentDidUpdate","prevProps","prevState","recenterMap","mapRef","refs","node","findDOMNode","zoom","center","LatLng","mapConfig","Object","assign","current","panTo","renderChildren","children","Children","c","cloneElement","mapCenter","render","style","apiKey","defaultProps","visible"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {MapContainer} from './styles/Map.style'\nimport { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nconst mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '100%',\n    height: '300px'\n  }\n};\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n\n    const { lat, lng } = this.props.initialCenter;\n    this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      },\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      list :[],\n      types : ['accounting','airport','amusement_park','aquarium','art_gallery','atm','bakery','bank','bar','beauty_salon','bicycle_store','book_store','bowling_alley','bus_station','cafe','campground','car_dealer','car_rental','car_repair','car_wash','casino','cemetery','church','city_hall','clothing_store','convenience_store','courthouse','dentist','department_store','doctor','electrician','electronics_store','embassy','fire_station','florist','funeral_home','furniture_store','gas_station','gym','hair_care','hardware_store','hindu_temple','home_goods_store','hospital','insurance_agency','jewelry_store','laundry','lawyer','library','liquor_store','local_government_office','locksmith','lodging','mel_delivery','meal_takeaway','mosque','movie_rental','movie_theater','moving_company','museum','night_club','painter','park','parking','pet_store','pharmacy','physiotherapist','plumber','police','post_office','real_estate_agency','restaurant','roofing_contractor','rv_park','school','shoe_store','shopping_mall','spa','stadium','storage','store','subway_station','synagogue','taxi_stand','train_station','transit_station','travel_agency','university','veterinary_care','zoo']\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.centerAroundCurrentLocation) {\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const coords = pos.coords;\n          console.log('current Location',coords.latitude,coords.longitude)\n          this.setState({\n            currentLocation: {\n              lat: coords.latitude,\n              lng: coords.longitude\n            }\n          });\n        });\n      }\n    }\n    this.loadMap();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n    if (prevState.currentLocation !== this.state.currentLocation) {\n      this.recenterMap();\n    }\n  }\n  loadMap() {\n    if (this.props && this.props.google) {\n      // checks if google is available\n      const { google } = this.props;\n      const maps = google.maps;\n\n      const mapRef = this.refs.map;\n\n      // reference to the actual DOM element\n      const node = ReactDOM.findDOMNode(mapRef);\n      let { zoom } = this.props;\n      const { lat, lng } = this.state.currentLocation;\n      const center = new maps.LatLng(lat, lng);\n      this.setState({center})\n      const mapConfig = Object.assign(\n        {},\n        {\n          center: center,\n          zoom: zoom\n        }\n      );\n      // maps.Map() is constructor that instantiates the map\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n  recenterMap() {\n    const map = this.map;\n    const current = this.state.currentLocation;\n\n    const google = this.props.google;\n    const maps = google.maps;\n\n    if (map) {\n      let center = new maps.LatLng(current.lat, current.lng);\n      map.panTo(center);\n    }\n  }\n  renderChildren() {\n    const { children } = this.props;\n\n    if (!children) return;\n\n    return React.Children.map(children, c => {\n      if (!c) return;\n      return React.cloneElement(c, {\n        map: this.map,\n        google: this.props.google,\n        mapCenter: this.state.currentLocation\n      });\n    });\n  }\n  setNearByLocation = ()=>{\n    let request = {\n      location: this.state.currentLocation,\n      types: [\"atm\"],\n      radius: 5000,\n    };\n    if (this.props && this.props.google) {\n      const { google } = this.props;\n      console.log('this.map',this.map)\n      let service = new google.maps.places.PlacesService(this.map);\n\n      service.nearbySearch(request, this.callback);\n    }\n  }\n  callback = (request,status) =>{\n    this.props.setLocations(request);\n  }\n  onMarkerClick = (props, marker, e) =>\n  this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true\n  });\n\nonClose = props => {\n  if (this.state.showingInfoWindow) {\n    this.setState({\n      showingInfoWindow: false,\n      activeMarker: null\n    });\n  }\n};\n  render(){\n    const style = Object.assign({}, mapStyles.map);\n  return (\n    <MapContainer>\n        <div style={style} ref=\"map\">\n          Loading map...\n        </div>\n        {this.renderChildren()}\n        <button style={{position:'absolute'}} onClick={this.setNearByLocation}>JUNAID</button>\n    </MapContainer>\n    );\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCdWkEeqRMNnTrlSmKnCo1WFY7xo6-nKw8'\n})(Map);\nMap.defaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: 9.1700576,\n    lng: 72.8602116\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};"]},"metadata":{},"sourceType":"module"}